openapi: 3.0.0
info:
  title: Cars API
  version: '1.0'
  description: This is a test API of Cars. I built it as a way to explore Stoplight Studio and OpenAPI as tools for building APIs
servers:
  - url: 'http://localhost:3000'
paths:
  /transactions/write:
    post:
      summary: Write Request
      operationId: post-transactions-write
      responses:
        '200':
          description: OK
      description: Submit a write transaction request. This request will try to take the request body and generate a transaction block in the Chios blockchain that represents writing data to the blockchain.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cid:
                  type: number
                type:
                  type: string
                ops:
                  type: number
                encrypt:
                  type: string
              required:
                - cid
                - type
                - ops
            examples:
              Example:
                value:
                  cid: 1000
                  type: json
                  ops: 1
                  encrypt: threshold
  /transactions/read:
    post:
      summary: Read Request
      operationId: post-transactions-read
      responses:
        '200':
          description: OK
      description: Submit a write transaction request. This request will try to take the request body and generate a transaction block in the Chios blockchain that represents reading data from the blockchain.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cid:
                  type: number
                type:
                  type: string
                ops:
                  type: number
                encrypt:
                  type: string
                target:
                  type: string
              required:
                - cid
                - type
                - ops
                - target
            examples:
              Example:
                value:
                  cid: 1000
                  type: json
                  ops: 1
                  target: 1020
                  encrypt: threshold
        description: ''
  /transactions/subscribe:
    post:
      summary: Subscribe Request
      operationId: post-transactions-subscribe
      responses:
        '200':
          description: OK
      description: Subcribe to updates published by the Chios blockchain.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cid:
                  type: string
                topics:
                  type:
                    - array
                    - string
                  items:
                    type: number
            examples:
              Example (topics):
                value:
                  cid: 1000
                  topics:
                    - 1
                    - 2
                    - 3
              Example (all):
                value:
                  cid: 1000
                  topics: all
        description: ''
  /transactions/overwrite:
    post:
      summary: Overwrite Transaction
      operationId: post-transactions-overwrite
      responses:
        '200':
          description: OK
      description: "Overwrite a transaction. Because blocks can't be removed, a new block is created which abrogates an old block."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
            examples:
              Example:
                value:
                  id: 1000
  /contract/deploy:
    post:
      summary: Deploy Contract
      operationId: post-contract-deploy
      responses:
        '200':
          description: OK
      description: Deploy a smart contract to Chios.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                requests:
                  type: number
                encrypt:
                  type: boolean
                contract:
                  type: string
              required:
                - id
                - requests
                - encrypt
                - contract
            examples:
              Example:
                value:
                  id: 1000
                  requests: 7
                  encrypt: true
                  contract: Send $$
  /contract/execute:
    post:
      summary: Execute Contract
      operationId: post-contract-execute
      responses:
        '200':
          description: OK
      description: "Execute a contract once it's deployed to Chios."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                requests:
                  type: number
                encrypt:
                  type: boolean
              required:
                - id
                - requests
                - encrypt
            examples:
              Example:
                value:
                  id: 1000
                  requests: 6
                  encrypt: true
  /agent/verify:
    post:
      summary: Agent Verification
      operationId: post-agent-verify
      responses:
        '200':
          description: OK
      description: Verify an agent ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                ops:
                  type: number
              required:
                - id
                - ops
            examples:
              Example:
                value:
                  id: 1000
                  ops: 3
  /agent/load:
    post:
      summary: Load Agent
      operationId: post-agent-load
      responses:
        '200':
          description: OK
      description: Load an agent.
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /identity/register:
    post:
      summary: Identity Registration
      operationId: post-identity-register
      responses:
        '200':
          description: OK
      description: Create an Identification ID. A client can make a reqeust to generate a new Identification ID. An existing ID is required for this request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                ip:
                  type: string
                port:
                  type: number
            examples:
              Example:
                value:
                  id: 1000
                  ip: 127.0.0.1
                  port: 5000
components:
  schemas: {}
